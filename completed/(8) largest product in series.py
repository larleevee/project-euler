numStr = str('7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450') #evil number

numList = []
products = []

for i in range(len(numStr)):
  numList.append(numStr[i]) #each digit of evil number into list

for i in range(len(numList)):
  numList[i] = int(numList[i]) #str -. int

a = 0 #for some reason numerical indexes weren't working so I resorted to this mess
b = 1 #represents 13 adjacent list elements
c = 2
d = 3
e = 4
f = 5
g = 6
h = 7
i = 8
j = 9
k = 10
l = 11
m = 12

while m<=999: #product of 13 adjacent list elements (ouch)
    n = numList[a]*numList[b]*numList[c]*numList[d]*numList[e]*numList[f]*numList[g]*numList[h]*numList[i]*numList[j]*numList[k]*numList[l]*numList[m]
    products.append(n) #puts all products in a list
    a += 1
    b += 1
    c += 1
    d+= 1
    e+= 1
    f+= 1
    g+= 1
    h+= 1
    i+= 1
    j+= 1
    l+= 1
    k+= 1
    m+= 1
    if m >= 1000:
        break


print(max(products)) #max value of list = largest product